networks:
  omotes:
    external: true
  mapeditor-net:
    external: true

volumes:
  db-data:

services:
  omotes-rest:
    image: ghcr.io/project-omotes/omotes_rest:1.1.0
    networks:
      - omotes
      - mapeditor-net
    ports:
      - "9200:9200"
    environment:
      OMOTES_ID: ${OMOTES_ID}

      RABBITMQ_HOSTNAME: rabbitmq-nwn
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_VIRTUALHOST: omotes

      POSTGRES_HOST: rest_postgres_db
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: omotes_rest
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      POSTGRES_ROOT_USER: ${POSTGRES_ROOT_USER}
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}

      LOG_LEVEL: info
    depends_on:
      rest_postgres_db:
        condition: service_healthy

  rest_postgres_db:
    image: postgres:15.4
    restart: unless-stopped
    volumes:
      - "db-data:/var/lib/POSTGRES/data/"
      - "./src/postgres-init.sql:/setup/init.sql"
    networks:
      - omotes
    environment:
      PGDATA: /var/lib/POSTGRES/data
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_ROOT_USER}
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_ROOT_USER}", "-d", "${POSTGRES_DATABASE}" ]
      interval: 5s
      timeout: 5s
      retries: 10

  # Skipped in 'docker-compose up', only used in 'setup.sh'
  rest_postgres_db_upgrade:
    build: postgres_db_upgrade
    networks:
      - omotes
    environment:
      POSTGRES_ROOT_USER: ${POSTGRES_ROOT_USER}
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_HOST: rest_postgres_db
      POSTGRES_PORT: 5432
    depends_on:
      rest_postgres_db:
        condition: service_healthy
    profiles:
      - manual_setup
